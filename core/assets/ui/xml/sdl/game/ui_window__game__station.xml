<?xml version="1.0" encoding="ISO-8859-1"?>
<root>
    <config>
        <include sub_dir="ui/implemented/generated/game/">
            <header path="ui/implemented/generated/game/ui_window__game__hud.h"/>
            <header path="ui/ui_context.h"/>
            <header path="ui/ui_element.h"/>
            <header path="ui/ui_button.h"/>
            <header path="ui/ui_drop_zone.h"/>
            <header path="ui/ui_draggable.h"/>
            <header path="ui/ui_slider.h"/>
            <header path="ui/ui_manager.h"/>
            <header path="vectors.h"/>
            <header path="defines.h"/>
            <header path="game.h"/>
            <header path="ui/ui_drop_zone__inventory_slot.h"/>
            <header path="ui/handlers/inventory/ui_handler__station__button_craft.h"/>
        </include>
        <output base_dir="./" c_path="./core/source/ui/implemented/generated/game/ui_window__game__station.c" h_path="./core/include/ui/implemented/generated/game/ui_window__game__station.h"/>
        <platform target="SDL" size="256,256"/>
        <background layer="0" x="158" y="88" path="./core/assets/ui/default/ui_map_short_inventory_column.png"/>
        <background layer="1" path="./core/assets/ui/default/ui_map_station_items.png"/>
        <background layer="2" path="./core/assets/ui/default/ui_map_station.png"/>
        <ui_func_signature for="grid"/>
        <ui_func_signature for="group"/>
        <ui_func_signature for="alloc_child" c_signatures="allocate_ui_element_from__ui_manager_as__child"/>
        <ui_func_signature for="allocate_ui" c_signatures="allocate_ui_element_from__ui_manager"/>
        <ui_func_signature for="allocate_ui_container" c_signatures="allocate_many_ui_elements_from__ui_manager_in__succession"/>
        <ui_func_signature for="code"/>
        <ui_func_signature for="button" c_signatures="initialize_ui_element_as__button"/>
        <ui_func_signature for="background" c_signatures="SDL_initialize_ui_element_as__background"/>
        <ui_func_signature for="slider" c_signatures="initialize_ui_element_as__slider"/>
        <ui_func_signature for="draggable" c_signatures="initialize_ui_element_as__draggable"/>
        <ui_func_signature for="drop_zone" c_signatures="initialize_ui_element_as__drop_zone"/>
    </config>
    <ui offset_of__ui_index="3">
        <code>
            allocate_ui_for__ui_window__game__hud(p_gfx_context, p_gfx_window, p_ui_manager);
            toggle_ui_button(get_p_ui_element_by__index_from__ui_manager(p_ui_manager, 0));
        </code>
        <group>
            <allocate_ui name="p_slider">
                <slider x="228" y="132" width="16" height="80" spanning_height="176" m_Dragged_Handler="m_ui_slider__dragged_handler__gfx_window__default"/>
            </allocate_ui>
            <code>
                allocate_sprite_for__ui_slider(
                        p_gfx_context,
                        p_gfx_window,
                        p_slider);
                Graphics_Window *p_gfx_window__inv_column =
                    open_ui(
                        p_gfx_context,
                        p_ui_manager,
                        UI_Window_Kind__Inventory_Column__Small);
                p_slider->p_ui_data = 
                    p_gfx_window__inv_column;
            </code>
            <allocate_ui_container x="140" y="100" size="3" stride__y="32" name="p_recipe_and_tools">
                <drop_zone width="20" height="20" color="55,55,96" m_Receive_Drop_Handler="m_ui_drop_zone__receive_drop_handler__inventory_slot"/>
                <code>
                    set_ui_element__p_data(
                        p_ui_iterator,
                        get_p_ui_element_by__index_from__ui_manager(
                            p_ui_manager,
                            UI_WINDOW__GAME__STATION_P_RECIPE_AND_TOOLS_4));
                </code>
            </allocate_ui_container>
            <grid x="28" y="124" size="2" stride__y="32" name="p_requirements">
                <allocate_ui_container size="2" stride__x="32">
                    <drop_zone width="20" height="20" color="55,55,96" m_Receive_Drop_Handler="m_ui_drop_zone__receive_drop_handler__inventory_slot"/>
                    <code>
                        set_ui_element__p_data(
                            p_ui_iterator,
                            get_p_ui_element_by__index_from__ui_manager(
                                p_ui_manager,
                                UI_WINDOW__GAME__STATION_P_RECIPE_AND_TOOLS_4));
                    </code>
                </allocate_ui_container>
            </grid>
            <grid x="174" y="103" size="9" stride__y="28" name="p_inventory_column">
                <allocate_ui_container size="2" stride__x="24">
                    <drop_zone width="23" height="27" color="55,55,96" m_Receive_Drop_Handler="m_ui_drop_zone__receive_drop_handler__inventory_slot"/>
                    <code>
                        set_ui_element__p_data(
                            p_ui_iterator,
                            get_p_ui_element_by__index_from__ui_manager(
                                p_ui_manager,
                                UI_WINDOW__GAME__STATION_P_INVENTORY_COLUMN_11));
                    </code>
                </allocate_ui_container>
            </grid>
            <code>
                set_ui_element_as__the_parent_of__this_ui_element(
                    p_ui_manager,
                    p_slider,
                    get_p_ui_element_by__index_from__ui_manager(
                        p_ui_manager,
                        UI_WINDOW__GAME__STATION_P_INVENTORY_COLUMN_11));
            </code>
        </group>
        <allocate_ui>
            <button x="100" y="164" width="32" height="16" name="p_button_craft" m_Clicked_Handler="m_ui_button__click_handler__station_craft"/>
        </allocate_ui>
            <code>
                Graphics_Window *p_gfx_window__station =
                    open_ui(
                        p_gfx_context,
                        p_ui_manager,
                        UI_Window_Kind__Station_Items);
            </code>
    </ui>
</root>


